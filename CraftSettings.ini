## This is the settings file for use with powershell.
## Copy it to your craft/../etc and call ". .\kdeenv.ps1" or "kdeenv.bat" in your craft checkout.
## You can use cmake like variables for values in the same section ${Variable}
## or for variables from a different section ${Section:Variable}.
## See Paths/${DOWNLOADDIR}

[General]

## Here you set the ABI to be used.
## #platform-#abi-#compiler
## Valid combinations are:
## windows-msvc[2015, 2017]_[32, 64]-[cl, clang]
## windows-mingw_[32, 64]-[gcc, clang]
## linux-[32, 64]-[gcc, clang]
## macos-[32, 64]-clang
## freebsd-[32, 64]-clang
ABI = macos-64-clang
## This option should be set to False if you use the msvc 201X Express Edition 64bit compiler
## in all other cases, simply keep this option commented out
#Native=False

## This option can be used to enable a notification backend.
## As soon as the buildprocess of a project has finished a notification will be displayed.
## Possible Backends:
## Snore https://commits.kde.org/snorenotify. Snore supports multiple backends.
### To configure it call craft --snore-settings
### You might need to install snorenotify
#Notify = Snore

## Speed up the merging of packages by using hard links
UseHardlinks = True

[Variables]
## Values here are usually set by craft and can be used for dynamic values
## To override the variables, uncomment them

## The working directory of Craft
#CraftRoot =

## The directory of the Craft clone
#CraftDir =


[Paths]
## This is the location of your python installation.
## This value must be set.
Python = /usr/local/opt/python3/bin

## Some applications may need python 2.7
#Python27 = C:\python27

## Craft ist able to fetch and install Msys itself, but if you prefer to use
## your own installation specify it here
#Msys = C:\msys

## Here you change the download directory.
## If you want, so you can share the same download directory between
## mingw and msvc.
## The default value is craft/../download
#DownloadDir = C:\kde\download

## This option defines the location for git checkouts.
## The default value is craft/../download/git
#KDEGitDir = ${DOWNLOADDIR}\git

## This option defines the location for svn checkouts.
## The default value is craft/../download/svn
#KDESVNDir = ${DOWNLOADDIR}\svn

## This option defines the location where the ccache files are stored.
## The default location is KDEROOT/build/ccache
#CCACHE_DIR = C:\CCACHE\kf5

[Compile]
## Whether to build tests (default: True)
#BuildTests = False

## the buildtype of this installation
## Possible Values:
## Release
## RelWithDebInfo
## Debug
## MinSizeRel
BuildType = RelWithDebInfo

## Whether to use ninja (default: False)
UseNinja = True

## Whether to use ccache (only avalible with mingw compiler)
#UseCCache = True

## This option can be used to override the default make program
## change the value to the path of the executable you want to use instead.
MakeProgram = make

[ShortPath]
## substitute pathes by drives
## This option is needed to avoid path limit problems in case of long base pathes
## and compiling big packages like qt
## If you disable it do _not_ use any paths longer than 6 letters in the
## directory settings
Enabled = False

## each drive could be commented out to skip substution
RootDrive = R:
GitDrive = Q:
#DownloadDrive = T:


## Experimental!!!
## Use Junctions to work around long paths.
#EnableJunctions = True

## The directory where the junctions are created.
#JunctionDir=

## A drive letter where JunctionDir is mounted to.
## When this variable is defined craft will mount the drive even if [ShortPath]Enabled == False
#JunctionDrive = Z:



[Blueprints]
## The locations of the recipes
## You can specify additional external locations in ; seperated list
#Locations = C:\blueprints

## This adds the possibility to disable cretin blueprints
## Whether a blueprint is active can be determined with options.isActive
## "if self.subinfo.options.isActive("binary/mysql"):"
## Ignores = dev-util/git;dev-util/msys;kdesupport/kdewin;win32libs/boost/boost-python
Ignores = gnuwin32/.*;dev-util/.*;binary/.*;kdesupport/kdewin;win32libs/.*;libs/qt5/.*;kde/applications/gpgmepp;frameworks/tier3/kwallet;qt-libs/phonon-vlc

[BlueprintVersions]
## Allow to automatically update certain recipes once a day.
EnableDailyUpdates = True

## Override the default version for a package.
## For a normal package add category/package, like win32libs/libpng and set the Version
## For meta packages like Qt5 you can directly set the version for the whole package
#libs/craft = master
#Qt5 = 5.2.1
#KF5 = 5.2.0
#KDE = 4.89.0
#Boost = 1_55_0
#win32libs/libpng = 1.2.43
#binary/vlc = 3.0.0-git
kde/applications/kstars=master

[Packager]
## The archive type for packages.
## Possible values are: zip, 7z
## Todo: rename
7ZipArchiveType = 7z

## If set this will override the default package type.
## Possible values are: SevenZipPackager,  MSIFragmentPackager,
##                      InnoSetupPackager, NullsoftInstallerPackager,
##                      CreateArchivePackager
#PackageType = SevenZipPackager

## Package the Source files too.
PackageSrc = False

## A url to a Craft cache repository
RepositoryUrl = https://files.kde.org/craft/unstable/

## Enable to fatch packages from a Craft cache repository
## See --use-cache and --no-cache in the Craft help.
#UseCache = True

[CraftDebug]
## If you want to have verbose output, uncomment the following option
## and set it to positive integer for verbose output and to 0
## (or disable it) for normal output. Currently the highest verbosity level
## is 3 (equal to 'craft -v -v -v'). level -1 equals 'craft -q'
## Default is Verbose = 0
#Verbose = 1

# Log environment, prints the current state of the environment befor an application is run
LogEnvironment = True

## Prints time spend on various craft tasks
MeasureTime = False

## Dump internal state of craftSettings to kdesettings.ini.dump
#DumpSettings = True

[Environment]
## All values defined here will be populated to the environment
#GIT_COMMITTER_EMAIL = foo@bar.com

## Set the ssh client for git and svn.
#GIT_SSH = plink
#SVN_SSH = plink


[QtSDK]
## For advanced users only
## Whether to use prebuild Qt binaries.
Enabled = False
## The path to the Qt sdk.
Path = D:\Qt
## The version of Qt.
Version = 5.9
## The compiler version, if you are not sure what to use, have a look into the derectory set in QtSDK/Path.
## The compiler must be of the same type as General/KDECOMPILER.
## If you are using mingw please make sure you have installed the mingw using the Qt installer.
Compiler = mingw482_32

[Version]
ConfigVersion = 4